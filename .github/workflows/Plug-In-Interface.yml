name: Build plugins

on:
  #push:
  #  branches: [master]
  #  paths-ignore:
  #    - "**.md"
  #    - "**/PluginAppLoader/Apps/**"
  #    - "**/robodk_interface/**"

  pull_request:
    branches: [master]
    paths-ignore:
      - "**.md"
      - "**/PluginAppLoader/Apps/**"
      - "**/robodk_interface/**"

  workflow_dispatch: # Run workflow manually

env:
  BUILD_TYPE: Release

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: true
      matrix:
        include:
          - os: windows-latest
            OUTPUT_DIR: C:/RoboDK/bin/plugins
            QT_VERSION: "5.15.2"

          - os: ubuntu-latest
            OUTPUT_DIR: ~/RoboDK/bin/plugins
            QT_VERSION: "5.15.2"

          - os: macos-latest
            OUTPUT_DIR: ~/RoboDK-Dev/Deploy/RoboDK.app/Contents/MacOS/plugins
            QT_VERSION: "5.15.2"

    steps:
      - uses: actions/checkout@v4

      - name: Install Qt
        uses: jurplel/install-qt-action@v4
        with:
          tools: "tools_qtcreator,qt.tools.qtcreator"
          version: ${{ matrix.QT_VERSION }}
          target: "desktop"
          cache: "true"
          cache-key-prefix: "install-qt-action-${{ matrix.os }}"

      - name: Configure and build Plug-In-Interface on Windows
        if: startsWith(matrix.os, 'windows')
        run: |
          cd ${{ github.workspace }}
          call "%programfiles(x86)%\Microsoft Visual Studio\2019\Enterprise\VC\Auxiliary\Build\vcvarsall.bat" x86_amd64
          qmake Plug-In-Interface.pro -spec win32-msvc CONFIG+=qtquickcompiler CONFIG+=${{ env.BUILD_TYPE }}
          call %IQTA_TOOLS%\QtCreator\bin\jom\jom.exe
        shell: cmd

      - name: Configure and build Plug-In-Interface on Unix
        if: (!startsWith(matrix.os, 'windows'))
        run: |
          cd ${{ github.workspace }}
          qmake Plug-In-Interface.pro CONFIG+=qtquickcompiler CONFIG+=${{ env.BUILD_TYPE }}
          make
        shell: bash

      - name: Upload runtime artifacts
        uses: actions/upload-artifact@v4
        with:
          name: Plug-In-Interface-Runtime-${{ matrix.os }}-${{ env.BUILD_TYPE }}
          if-no-files-found: error
          path: |
            ${{ matrix.OUTPUT_DIR }}/*.dll
            ${{ matrix.OUTPUT_DIR }}/*.so
            ${{ matrix.OUTPUT_DIR }}/*.dylib

      - name: Upload buildtime artifacts
        uses: actions/upload-artifact@v4
        with:
          name: Plug-In-Interface-Buildtime-${{ matrix.os }}-${{ env.BUILD_TYPE }}
          if-no-files-found: warn
          path: |
            ${{ matrix.OUTPUT_DIR }}/*.exp
            ${{ matrix.OUTPUT_DIR }}/*.lib
